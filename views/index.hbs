<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <title>Socket.IO chat</title>
  <style>
      body {
          margin: 0;
          padding-bottom: 3rem;
          font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
      }

      #form {
          background: rgba(0, 0, 0, 0.15);
          padding: 0.25rem;
          position: fixed;
          bottom: 0;
          left: 0;
          right: 0;
          display: flex;
          height: 3rem;
          box-sizing: border-box;
          backdrop-filter: blur(10px);
      }

      #input {
          border: none;
          padding: 0 1rem;
          flex-grow: 1;
          border-radius: 2rem;
          margin: 0.25rem;
      }

      #input:focus {
          outline: none;
      }

      #form > button {
          background: #333;
          border: none;
          padding: 0 1rem;
          margin: 0.25rem;
          border-radius: 3px;
          outline: none;
          color: #fff;
      }

      #messages {
          list-style-type: none;
          margin: 0;
          padding: 0;
      }

      #messages > li {
          padding: 0.5rem 1rem;
      }

      #messages > li:nth-child(odd) {
          background: #efefef;
      }
  </style>
</head>
<body>
<ul id="messages"></ul>
<form id="form" action="">
  <span id="typing"></span>
  <input id="input" autocomplete="off" />
  <button>Send</button>
</form>
<script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
<script>
  const options = {transportOptions: {
      polling: {
        extraHeaders: {
          Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1M2JkNDUyMTU2YWEzZjQ1ODU0YTMzNiIsInJvbGVzIjpbeyJuYW1lIjoidXNlciIsImlkIjoiNjUzYmNjZTJkYTU0ZGM5YzRhMWY4OTBlIn1dLCJpYXQiOjE2OTg0OTIwODEsImV4cCI6MTY5ODQ5MjE0MX0.WsQu2NXRB_Gl52EqNEgJ2Wgi8s6yOEy4NDkJIKjTITY'}
      }
    }}
  const socket = io('ws://localhost:3000', options);
  socket.emit('ping', "ping from client")
  socket.on('pong', (data) => {
    console.log(data)
  })

  socket.emit('private', "private from client")
  socket.on('private', (data) => {
    console.log(data)
  })
  socket.on('error', (data) => {
    console.log(data)
  })

</script>
</body>
</html>